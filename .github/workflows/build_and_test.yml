name: Build & test

on:
  push:
    branches:
      - master
    tags:
      - v**.**
  pull_request:
    branches:
      - master

jobs:
  build-test:
    strategy:
      fail-fast: false
      matrix:
        build_profile: [clang20r, gcc20r, msvc20r]
        include:
          # - build_profile: clang20d
          #   conan_preset: clang-20-debug
          #   os: ubuntu-latest
          - build_profile: clang20r
            conan_preset: clang-20-release
            os: ubuntu-latest
          # - build_profile: gcc20d
          #   conan_preset: gcc-20-debug
          #   os: ubuntu-latest
          - build_profile: gcc20r
            conan_preset: gcc-20-release
            os: ubuntu-latest
          # - build_profile: msvc20d
          #   conan_preset: msvc-20-debug
          #   os: windows-latest
          - build_profile: msvc20r
            conan_preset: msvc-20-release
            os: windows-latest

    name: ${{ matrix.build_profile }}
        
    runs-on: ${{matrix.os}}
    
    steps:
    - uses: actions/checkout@v4
    - uses: seanmiddleditch/gha-setup-ninja@v4
    - uses: seanmiddleditch/gha-setup-vsdevenv@master
    - uses: KyleMayes/install-llvm-action@v1
      with:
        version: "17.0"
        directory: ${{ runner.temp }}/llvm
    - run: pip install conan

    - name: Install GCC
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt update
        sudo apt install gcc-13 g++-13
        sudo update-alternatives --remove-all gcc || true
        sudo update-alternatives --remove-all g++ || true
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 10 --slave /usr/bin/g++ g++ /usr/bin/g++-13

    - name: Cache conan packages
      id: cache-conan
      uses: actions/cache@v3
      with:
        path: ~/.conan2/p
        key: conan-cache-packages-${{ matrix.build_profile }}

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Cache LLVM library
      id: cache-llvm-library
      uses: actions/cache@v3
      with:
        path: ${{github.workspace}}/build/${{matrix.conan_preset}}/externals/LLVM/install
        key: llvm-cache-${{ matrix.build_profile }}

    - name: Configure CMake
      shell: bash
      env:
        PR: "${{github.workspace}}/.github/build_profiles/${{matrix.build_profile}}"
      run: |
        cmake -E make_directory "${{github.workspace}}/build"
        conan install "${{github.workspace}}" --build="*" -pr $PR -pr:b $PR
        conan cache clean
        cmake -S "${{github.workspace}}" --preset conan-${{ matrix.conan_preset }} -DEXTERNAL_LLVM_STRIP_DEBUG_INFO:BOOL=ON -DEXTERNAL_LLVM_IGNORE_SYSTEM:BOOL=ON

    - name: Build
      run: |
        cmake --build --preset conan-${{ matrix.conan_preset }}
        cmake -E make_directory ${{github.workspace}}/install/TemplateCoverage
        cmake --install ./build/${{ matrix.conan_preset }} --prefix '${{github.workspace}}/install/TemplateCoverage'

    - name: Test
      run: ${{github.workspace}}/build/${{ matrix.conan_preset }}/bin/Test

    - name: Upload artifact binary
      uses: actions/upload-artifact@v4
      with:
        name: TemplateCoverage-${{matrix.build_profile}}
        path: '${{github.workspace}}/install/TemplateCoverage'
        if-no-files-found: error