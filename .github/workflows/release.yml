name: Release

on:
  workflow_run:
    workflows: [Build & test]
    branches: [v**.**]
    types: [completed]

jobs:
  create_release:
    permissions:
      actions: read
      contents: write  
    env:
      GH_TOKEN: ${{ github.token }}
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch != null }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Download Windows binary
        uses: actions/download-artifact@v4
        with:
          name: TemplateCoverage-msvc20r
          path: ${{github.workspace}}/TemplateCoverage_Windows_x86_64
          github-token: ${{github.token}}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Download Linux binary
        uses: actions/download-artifact@v4
        with:
          name: TemplateCoverage-clang20r
          path: ${{github.workspace}}/TemplateCoverage_Linux_x86_64
          github-token: ${{github.token}}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Zip artifacts
        shell: bash
        working-directory: ${{github.workspace}}
        run: |
          cp ${{github.workspace}}/tools/*.py ${{github.workspace}}/TemplateCoverage_Windows_x86_64
          cp ${{github.workspace}}/tools/*.py ${{github.workspace}}/TemplateCoverage_Linux_x86_64
          zip -r TemplateCoverage_Windows_x86_64.zip TemplateCoverage_Windows_x86_64
          zip -r TemplateCoverage_Linux_x86_64.zip TemplateCoverage_Linux_x86_64

      - name: Create release
        shell: bash
        run: |
          gh release create ${{ github.event.workflow_run.head_branch }}
          gh release upload ${{ github.event.workflow_run.head_branch }} ${{github.workspace}}/TemplateCoverage_Windows_x86_64.zip#TemplateCoverage_Windows_x86_64
          gh release upload ${{ github.event.workflow_run.head_branch }} ${{github.workspace}}/TemplateCoverage_Linux_x86_64.zip#TemplateCoverage_Linux_x86_64